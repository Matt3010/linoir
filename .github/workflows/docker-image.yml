name: Deploy Docker Compose

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Run docker-compose
      run: docker compose up -d

    - name: Test frontend
      run: |
        if ! curl -I http://localhost:8080; then
          echo "Frontend non risponde"
          exit 1
        fi

    - name: Test WS service port
      run: |
        if ! nc -z localhost 3333; then
          echo "WebSocket service not responding on port 3333"
          exit 1
        fi

    - name: Stop containers
      if: always()
      run: docker compose down

    - name: Send notification email on success
      if: success()
      uses: actions/github-script@v6
      with:
        script: |
          const nodemailer = require('nodemailer');

          const transporter = nodemailer.createTransport({
            service: 'gmail',
            auth: {
              user: process.env.SMTP_USER,
              pass: process.env.SMTP_PASS,
            },
          });

          await transporter.sendMail({
            from: process.env.SMTP_USER,
            to: 'scanferla935@gmail.com',
            subject: '✅ Deploy completato con successo',
            text: 'Il deploy su master è stato completato con successo.',
          });
      env:
        SMTP_USER: ${{ secrets.SMTP_USER }}
        SMTP_PASS: ${{ secrets.SMTP_PASS }}

    - name: Send notification email on failure
      if: failure()
      uses: actions/github-script@v6
      with:
        script: |
          const nodemailer = require('nodemailer');

          const transporter = nodemailer.createTransport({
            service: 'gmail',
            auth: {
              user: process.env.SMTP_USER,
              pass: process.env.SMTP_PASS,
            },
          });

          await transporter.sendMail({
            from: process.env.SMTP_USER,
            to: 'scanferla935@gmail.com',
            subject: '❌ Deploy FALLITO',
            text: 'Il deploy su master è fallito. Controlla i log per dettagli.',
          });
      env:
        SMTP_USER: ${{ secrets.SMTP_USER }}
        SMTP_PASS: ${{ secrets.SMTP_PASS }}
